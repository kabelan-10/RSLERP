import express from 'express';
import multer from 'multer';
import xlsx from 'xlsx';
import pool from "../DB/dbpg.js"; // Import the PostgreSQL connection pool

const router = express.Router();

// Configure multer to store uploaded files in memory
const storage = multer.memoryStorage(); 
const upload = multer({ storage });

// Route to handle Excel file upload
router.post('/uploadExcel', upload.single('file'), async (req, res) => {
  const buffer = req.file.buffer;
  const checkboxChecked = req.body.CheckboxChecked === 'true'; // Extract checkbox value
  console.log(checkboxChecked);

  try {
    const client = await pool.connect(); // Get a client from the pool
    await client.query('BEGIN'); // Start a transaction

    // Read and parse the Excel file
    const workbook = xlsx.read(buffer, { type: 'buffer' });
    const sheetNames = workbook.SheetNames;
    const data = xlsx.utils.sheet_to_json(workbook.Sheets[sheetNames[0]], {
      header: 1,
      range: 2, // Skip the header row
    });
    console.log('Data from file:', data);
    console.log('Checkbox checked:', checkboxChecked);

    // Insert or update records in the database
    for (const row of data) {
      { /* const query = `
        INSERT INTO public.item_master_o (
          y, q, sn, mat_code, cli_code, mat_desc, drawing, correct_rev, mat_grade, rm1_od, rm1_id, rm1_t, 
          rm2_od, rm2_id, rm2_t, ste_od, ste_id, ste_t, w_rm1, w_rm2, w_tot_rm, w_st6, pm, fm, drill, 
          c_rm1, c_rm2, "c_rm1+rm2", "wa_rm1+rm2", "ca_rm1+rm2", wa_rm3, ca_rm3, tpc, tc, tcm, 
          tc_inr, c_pack, conv_rate, remarks
        ) 
        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, 
                $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, 
                $37, $38, $39)
        ON CONFLICT (mat_code) 
        DO UPDATE SET 
          y = EXCLUDED.y, q = EXCLUDED.q, sn = EXCLUDED.sn, cli_code = EXCLUDED.cli_code, 
          mat_desc = EXCLUDED.mat_desc, drawing = EXCLUDED.drawing, correct_rev = EXCLUDED.correct_rev, 
          mat_grade = EXCLUDED.mat_grade, rm1_od = EXCLUDED.rm1_od, rm1_id = EXCLUDED.rm1_id, 
          rm1_t = EXCLUDED.rm1_t, rm2_od = EXCLUDED.rm2_od, rm2_id = EXCLUDED.rm2_id, 
          rm2_t = EXCLUDED.rm2_t, ste_od = EXCLUDED.ste_od, ste_id = EXCLUDED.ste_id, ste_t = EXCLUDED.ste_t, 
          w_rm1 = EXCLUDED.w_rm1, w_rm2 = EXCLUDED.w_rm2, w_tot_rm = EXCLUDED.w_tot_rm, w_st6 = EXCLUDED.w_st6, 
          pm = EXCLUDED.pm, fm = EXCLUDED.fm, drill = EXCLUDED.drill, c_rm1 = EXCLUDED.c_rm1, 
          c_rm2 = EXCLUDED.c_rm2, "c_rm1+rm2" = EXCLUDED."c_rm1+rm2", "wa_rm1+rm2" = EXCLUDED."wa_rm1+rm2", 
          "ca_rm1+rm2" = EXCLUDED."ca_rm1+rm2", wa_rm3 = EXCLUDED.wa_rm3, ca_rm3 = EXCLUDED.ca_rm3, 
          tpc = EXCLUDED.tpc, tc = EXCLUDED.tc, tcm = EXCLUDED.tcm, tc_inr = EXCLUDED.tc_inr, 
          c_pack = EXCLUDED.c_pack, conv_rate = EXCLUDED.conv_rate, remarks = EXCLUDED.remarks;
      `; */ }
      const query = `
        INSERT INTO public.item_master_o (
          y, q, sn, mat_code, cli_code, mat_desc, drawing, correct_rev, mat_grade, rm1_od, rm1_id, rm1_t, 
          rm2_od, rm2_id, rm2_t, ste_od, ste_id, ste_t, w_rm1, w_rm2, w_tot_rm, w_st6, pm, fm, drill, 
          c_rm1, c_rm2, "c_rm1+rm2", "wa_rm1+rm2", "ca_rm1+rm2", wa_rm3, ca_rm3, tpc, tc, tcm, 
          tc_inr, c_pack, conv_rate, remarks
        ) 
        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, 
                $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, 
                $37, $38, $39)
      `;
      await client.query(query, row);
    }

    await client.query('COMMIT'); // Commit the transaction
    client.release();
    res.send('File uploaded and processed successfully.');
  } catch (error) {
    if (checkboxChecked) {
      try {
        const client = await pool.connect(); // Get a client from the pool
        await client.query('BEGIN'); // Start a transaction
  
        // Insert or update records in the database
        for (const row of data) {
          const [y, q, sn, mat_code, cli_code, mat_desc, drawing, correct_rev, mat_grade, rm1_od, rm1_id, rm1_t, 
            rm2_od, rm2_id, rm2_t, ste_od, ste_id, ste_t, w_rm1, w_rm2, w_tot_rm, w_st6, pm, fm, drill, 
            c_rm1, c_rm2, c_rm1_rm2, wa_rm1_rm2, ca_rm1_rm2, wa_rm3, ca_rm3, tpc, tc, tcm, 
            tc_inr, c_pack, conv_rate, remarks] = row;
        
          const query = `
            INSERT INTO public.item_master_o (
              y, q, sn, mat_code, cli_code, mat_desc, drawing, correct_rev, mat_grade, rm1_od, rm1_id, rm1_t, 
              rm2_od, rm2_id, rm2_t, ste_od, ste_id, ste_t, w_rm1, w_rm2, w_tot_rm, w_st6, pm, fm, drill, 
              c_rm1, c_rm2, "c_rm1+rm2", "wa_rm1+rm2", "ca_rm1+rm2", wa_rm3, ca_rm3, tpc, tc, tcm, 
              tc_inr, c_pack, conv_rate, remarks
            ) 
            VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, 
                    $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32, $33, $34, $35, $36, 
                    $37, $38, $39)
            ON CONFLICT (mat_code) 
            DO UPDATE SET 
              y = EXCLUDED.y, q = EXCLUDED.q, sn = EXCLUDED.sn, cli_code = EXCLUDED.cli_code, 
              mat_desc = EXCLUDED.mat_desc, drawing = EXCLUDED.drawing, correct_rev = EXCLUDED.correct_rev, 
              mat_grade = EXCLUDED.mat_grade, rm1_od = EXCLUDED.rm1_od, rm1_id = EXCLUDED.rm1_id, 
              rm1_t = EXCLUDED.rm1_t, rm2_od = EXCLUDED.rm2_od, rm2_id = EXCLUDED.rm2_id, 
              rm2_t = EXCLUDED.rm2_t, ste_od = EXCLUDED.ste_od, ste_id = EXCLUDED.ste_id, ste_t = EXCLUDED.ste_t, 
              w_rm1 = EXCLUDED.w_rm1, w_rm2 = EXCLUDED.w_rm2, w_tot_rm = EXCLUDED.w_tot_rm, w_st6 = EXCLUDED.w_st6, 
              pm = EXCLUDED.pm, fm = EXCLUDED.fm, drill = EXCLUDED.drill, c_rm1 = EXCLUDED.c_rm1, 
              c_rm2 = EXCLUDED.c_rm2, "c_rm1+rm2" = EXCLUDED."c_rm1+rm2", "wa_rm1+rm2" = EXCLUDED."wa_rm1+rm2", 
              "ca_rm1+rm2" = EXCLUDED."ca_rm1+rm2", wa_rm3 = EXCLUDED.wa_rm3, ca_rm3 = EXCLUDED.ca_rm3, 
              tpc = EXCLUDED.tpc, tc = EXCLUDED.tc, tcm = EXCLUDED.tcm, tc_inr = EXCLUDED.tc_inr, 
              c_pack = EXCLUDED.c_pack, conv_rate = EXCLUDED.conv_rate, remarks = EXCLUDED.remarks;
          `;
          
          await client.query(query, [y, q, sn, mat_code, cli_code, mat_desc, drawing, correct_rev, mat_grade, rm1_od, rm1_id, rm1_t, rm2_od, rm2_id, rm2_t, ste_od, ste_id, ste_t, w_rm1, w_rm2, w_tot_rm, w_st6, pm, fm, drill, c_rm1, c_rm2, c_rm1_rm2, wa_rm1_rm2, ca_rm1_rm2, wa_rm3, ca_rm3, tpc, tc, tcm, tc_inr, c_pack, conv_rate, remarks]);
        
        }
  
        await client.query('COMMIT'); // Commit the transaction
        client.release();
        res.send('File uploaded and processed successfully.');
      } catch (error) {
        await client.query('ROLLBACK'); // Rollback the transaction on error
        console.error('Error processing file:', error);
        res.status(500).send('Error processing file.');
        client.release();
      }
    } else {
      console.error('Error processing file:', error);
      res.status(400).json({ error: "Checkbox not checked. No data processed." });
    }
  }
});

export default router;
