import express from 'express';
import multer from 'multer';
import xlsx from 'xlsx';
import pool from "../DB/dbpg.js"; // Import the PostgreSQL connection pool

const router = express.Router();

// Configure multer to store uploaded files in memory
const storage = multer.memoryStorage(); 
const upload = multer({ storage });

// Route to handle Excel file upload
router.post('/uploadExcel', upload.single('file'), async (req, res) => {
  const buffer = req.file.buffer;
  const checkboxChecked = req.body.CheckboxChecked === 'true'; // Extract checkbox value
  console.log(checkboxChecked);

  try {
    const client = await pool.connect(); // Get a client from the pool
    await client.query('BEGIN'); // Start a transaction

    // Read and parse the Excel file
    const workbook = xlsx.read(buffer, { type: 'buffer' });
    const sheetNames = workbook.SheetNames;
    const data = xlsx.utils.sheet_to_json(workbook.Sheets[sheetNames[0]], {
      header: 1,
      range: 2, // Skip the header row
    });
    console.log('Data from file:', data);
    console.log('Checkbox checked:', checkboxChecked);

    // Insert or update records in the database
    for (const row of data) {
      const query = `
        INSERT INTO "itemMaster_d"
        VALUES ($1, $2, $3)
      `;
      await client.query(query, row);
    }

    await client.query('COMMIT'); // Commit the transaction
    client.release();
    res.send('File uploaded and processed successfully.');
  } catch (error) {
    if (checkboxChecked) {
      try {
        const client = await pool.connect(); // Get a client from the pool
        await client.query('BEGIN'); // Start a transaction
  
        // Read and parse the Excel file again
        const workbook = xlsx.read(buffer, { type: 'buffer' });
        const sheetNames = workbook.SheetNames;
        const data = xlsx.utils.sheet_to_json(workbook.Sheets[sheetNames[0]], {
          header: 1,
          range: 2, // Skip the header row
        });
        console.log('Data from file:', data);
        console.log('Checkbox checked:', checkboxChecked);
  
        // Insert or update records based on their existence
        for (const row of data) {
          const [id, name, description] = row;
          
          // Check if the row already exists in the database
          const selectQuery = 'SELECT COUNT(*) FROM "itemMaster_d" WHERE "SN" = $1';
          const result = await client.query(selectQuery, [id]);
  
          if (parseInt(result.rows[0].count) > 0) {
            // Update existing record
            const updateQuery = `
              UPDATE "itemMaster_d"
              SET col1 = $2, col2 = $3
              WHERE "SN" = $1
            `;
            await client.query(updateQuery, [id, name, description]);
          } else {
            // Insert new record
            const insertQuery = `
              INSERT INTO "itemMaster_d"
              VALUES ($1, $2, $3)
            `;
            await client.query(insertQuery, [id, name, description]);
          }
        }
  
        await client.query('COMMIT'); // Commit the transaction
        client.release();
        res.send('File uploaded and processed successfully.');
      } catch (error) {
        await client.query('ROLLBACK'); // Rollback the transaction on error
        console.error('Error processing file:', error);
        res.status(500).send('Error processing file.');
        client.release();
      }
    } else {
      console.error('Error processing file:', error);
      const nooverride = true;
      res.status(400).json({ nooverride, error: "Checkbox not checked. No data processed." });
    }
  }
});

export default router;
